/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java'
    id 'eclipse'
    id 'maven'
}

//Set the predefined variables
version = '0.1.0'
group = 'at.tuwien.ict.acona'
//sourceCompatibility = 1.8	//Java version
//targetCompatibility = 1.8

//Define some custom variables that can be used within the file
def bundleSymbolicName = 'at.tuwien.ict.acona'
def bundleName = 'ACONA Experiments on distributed systems'
def classpathprefix = 'lib/'

eclipse {
    classpath {
        downloadJavadoc = true
		downloadSources = true
    }
}

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    //mavenLocal()
    //flatDir {		//If no repository is used, the flat file structure can be used here
    //	dirs '../../../SharedLibs/libs'
  	//}
  	//mavenCentral artifactUrls:['file://${basedir}/lib']
	maven {
        url "http://jade.tilab.com/maven/"
    }
}

dependencies {
    //Loggers
    //The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.15'
    compile 'ch.qos.logback:logback-core:1.1.3'											//Use logback for this driver
  	compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'org.codehaus.janino:janino:2.7.8'	//For color
    compile 'org.codehaus.janino:commons-compiler:2.7.8'
    compile 'org.fusesource.jansi:jansi:1.11'
	compile project(':acona-core')
    
    //GSON for representing data structures
	compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
	
	//Jersey server for REST
   	compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.7'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.7'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-jetty-http', version: '2.7'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-moxy', version: '2.26'
 	// https://mvnrepository.com/artifact/com.sun.jersey.contribs/jersey-multipart
	compile group: 'com.sun.jersey.contribs', name: 'jersey-multipart', version: '1.19.4'

	compile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
   	
   	//Jetty server
   	compile group: 'org.eclipse.jetty.aggregate', name: 'jetty-all', version: '9.3.0.M1'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    
    //Jersey client
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.26'
    compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.26'
    
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0',
            'org.junit.vintage:junit-vintage-engine:5.1.0'
    )
}

task copyDependencies(type: Copy) {
   from configurations.compile
   into 'dependencies'
}

test {
    //exclude 'at/tuwien/ict/**'
}

//Build the jar file
jar {
	//Generate a manifest file
  	manifest { 
	  	version = project.version.replace('-','.');		//Create a version in the manifest from the variable "version" of this file
    	//symbolicName = bundleSymbolicName
    	//name = "KORE Cell"
  	}
 }

configure(install.repositories.mavenInstaller) {
   	pom.project {
       	groupId 'at.tuwien.ict.acona'
      	artifactId 'acona-exp-distribution'
       	version '0.1.0'
       	inceptionYear '2019'
       	packaging 'jar'
       	licenses {
           	license {
               	name 'Eclipse Public License (Version 1.0)'
               	url 'http://www.eclipse.org/legal/epl-v10.html'
               	distribution 'repo'
           	}
       	}
   	}
}

