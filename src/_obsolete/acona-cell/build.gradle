/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'wendt' at '16.12.15 11:58' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

//Set the predefined variables
sourceCompatibility = 1.8
version = '1.0.0'
group = 'at.tuwien.ict.acona'
//sourceCompatibility = 1.8	//Java version
//targetCompatibility = 1.8

//Define some custom variables that can be used within the file
def bundleSymbolicName = 'at.tuwien.ict.acona.cell'
def bundleName = 'ACONA Cell Core'
def classpathprefix = 'lib/'

eclipse {
    classpath {
        downloadJavadoc = true
		downloadSources = true
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    //mavenLocal()
    //flatDir {		//If no repository is used, the flat file structure can be used here
    //	dirs '../../../SharedLibs/libs'
  	//}
  	//mavenCentral artifactUrls:['file://${basedir}/lib']
	maven {
        url "http://jade.tilab.com/maven/"
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
	//Loggers
    //The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-core:1.2.3'											//Use logback for this driver
  	compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'org.codehaus.janino:janino:2.7.8'	//For color
    compile 'org.codehaus.janino:commons-compiler:2.7.8'
    compile 'org.fusesource.jansi:jansi:1.11'
	//compile project(':acona-jadecommunicator')
	//compile project(':acona-cell-datastructures')
    
    //Jade library
	compile group: 'com.tilab.jade', name: 'jade', version: '4.5.0'
	
	//Apache Jena for RDF
	compile 'org.apache.jena:apache-jena-libs:3.1.0'
    
    //GSON for representing data structures
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    
    compile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.0'
    
    //Scannotation for the loading of annotated classes, easy reflections manager
    compile group: 'org.reflections', name: 'reflections', version: '0.9.11'
    
    
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.+'
    //compile 'junit:junit:4.+'
}

task copyDependencies(type: Copy) {
   from configurations.compile
   into 'dependencies'
}

test {
    exclude 'at/tuwien/ict/**'
}

//Build the jar file
jar {
	//Generate a manifest file
  	manifest { 
	  	version = project.version.replace('-','.');		//Create a version in the manifest from the variable "version" of this file
    	//symbolicName = bundleSymbolicName
    	//name = "KORE Cell"
  	}
 }

configure(install.repositories.mavenInstaller) {
   	pom.project {
       	groupId 'at.tuwien.ict.acona.cell'
      	artifactId 'acona-cell'
       	version '0.1.0'
       	inceptionYear '2016'
       	packaging 'jar'
       	licenses {
           	license {
               	name 'Eclipse Public License (Version 1.0)'
               	url 'http://www.eclipse.org/legal/epl-v10.html'
               	distribution 'repo'
           	}
       	}
   	}
}

//uploadArchives {
//    repositories {
//        mavenDeployer {
//            mavenLocal()
//        }
//    }
//}

